graph TD
    %% User/Client Side
    User["👤 User<br/>(MetaMask/dApp)"]
    
    %% nym-rpc-client components
    subgraph Client["🖥️ nym-rpc-client"]
        HTTPServer["📡 HTTP Server<br/>(localhost:8545)"]
        TcpProxyClient["🔄 TcpProxyClient<br/>(tcp_proxy_client.rs)"]
    end
    
    %% Nym Mixnet
    Mixnet["🌐 Nym Mixnet<br/>(Anonymous Network)"]
    
    %% nym-rpc-server components  
    subgraph Server["🖥️ nym-rpc-server"]
        TcpProxyServer["🔄 TcpProxyServer<br/>(tcp_proxy_server.rs)"]
    end
    
    %% RPC Provider
    Provider["🏢 RPC Provider<br/>(e.g., Infura, Alchemy)"]
    
    %% Flow arrows with descriptions
    User -->|"1. JSON-RPC Request<br/>(HTTP POST)"| HTTPServer
    HTTPServer -->|"2. Forward Request<br/>+ Add upstream header"| TcpProxyClient
    TcpProxyClient -->|"3. Encrypted via Mixnet<br/>ProxiedMessage with<br/>session_id + message_id"| Mixnet
    Mixnet -->|"4. Anonymous Delivery"| TcpProxyServer
    TcpProxyServer -->|"5. Extract upstream address<br/>from first message"| Provider
    Provider -->|"6. JSON-RPC Response"| TcpProxyServer
    TcpProxyServer -->|"7. Send reply via SURB<br/>(Single Use Reply Block)"| Mixnet
    Mixnet -->|"8. Anonymous Response"| TcpProxyClient
    TcpProxyClient -->|"9. Forward Response"| HTTPServer
    HTTPServer -->|"10. JSON-RPC Response"| User
    
    %% Styling
    classDef userClass fill:#e1f5fe
    classDef clientClass fill:#f3e5f5
    classDef serverClass fill:#e8f5e8
    classDef mixnetClass fill:#fff3e0
    classDef providerClass fill:#fce4ec
    
    class User userClass
    class Client,HTTPServer,TcpProxyClient clientClass
    class Server,TcpProxyServer serverClass
    class Mixnet mixnetClass
    class Provider providerClass